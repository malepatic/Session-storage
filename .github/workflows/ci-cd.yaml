name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  DOCKER_REGISTRY: ${{ github.actor }}
  APP_NAME: session-app
  AWS_REGION: us-west-2

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          
      - name: Unit Tests
        run: go test -v ./...
        
      - name: Build
        run: go build -o main .
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Login to Amazon ECR
        if: github.event_name != 'pull_request'
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.APP_NAME }}:latest
            ${{ env.DOCKER_REGISTRY }}/${{ env.APP_NAME }}:${{ github.sha }}
            
  deploy:
    needs: build-and-test
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name your-eks-cluster --region ${{ env.AWS_REGION }}
        
      - name: Deploy to Kubernetes
        run: |
          # Update Kubernetes manifests with the new image tag
          sed -i "s|${DOCKER_REGISTRY}/${APP_NAME}:.*|${DOCKER_REGISTRY}/${APP_NAME}:${GITHUB_SHA}|" k8s/deployment.yaml
          
          # Apply Kubernetes manifests
          kubectl apply -f k8s/
          
          # Wait for deployment to complete
          kubectl rollout status deployment/${APP_NAME}